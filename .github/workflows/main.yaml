name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/tests
  pull_request:
    branches:
      - main
      - feature/tests

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install libpq-dev
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  tests:
    needs: build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: flaskuser
          POSTGRES_PASSWORD: pFceLXKQaFV6hJuMiJbWaQ60mHnFWIas
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install libpq-dev
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Wait for PostgreSQL
      run: sleep 20

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        SQLALCHEMY_DATABASE_URI: postgresql://flaskuser:pFceLXKQaFV6hJuMiJbWaQ60mHnFWIas@localhost/test_db
        PGUSER: flaskuser
        PGPASSWORD: pFceLXKQaFV6hJuMiJbWaQ60mHnFWIas
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --maxfail=1 --disable-warnings -v

  deploy:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install libpq-dev
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Create virtual environment
      run: |
        python -m venv venv && . venv/bin/activate

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to production
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}

